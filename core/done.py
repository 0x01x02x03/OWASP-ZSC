#!/usr/bin/env python
'''
OWASP ZSC | ZCR Shellcoder

ZeroDay Cyber Research
Z3r0D4y.Com
Ali Razmjoo
'''
from core import color
from core import start
import sys
def c_style(job,os_name,encode_type,length,comment,compiled_filename,filename,shellcode):
	return '''
#include <stdio.h>
#include <string.h>
/*
This shellcode generated by ZCR Shellcoder [OWASP ZSC]
https://www.owasp.org/index.php/OWASP_ZSC_Tool_Project
http://zsc.z3r0d4y.com/
owasp-zsc-tool-project@lists.owasp.org

Title: %s
OS: %s
Encode: %s
Length: %s
%s


compile example: gcc -ggdb -static -fno-stack-protector -z execstack -mpreferred-stack-boundary=2 -o %s %s
*/
 
int main(){
unsigned char shellcode[]= %s;
fprintf(stdout,"Length: %%d\\n\\n",strlen(shellcode));
    (*(void(*)()) shellcode)();
}
'''%(job,os_name,encode_type,length,comment,compiled_filename,filename,shellcode)
def res(PASS,shellcode,filename,os_name,job,encode_type,length,old_encode_type,NE):
	if PASS is False:
		sys.exit(color.color('red')+'Sorry, I\'ve got some error while processing, Please try same thing one more time \nAnd if you got same error please share us your problem with details. Thank you.\n'+color.color('reset'))
	if PASS is True:
		save = open(filename,'w')
		save.write(shellcode)
		save.close()
		print ('''%sYour Shellcode file generated!

OS: %s%s%s
Job: %s%s%s
Encode: %s%s%s
Length: %s%s%s
Output: %s%s%s'''%(color.color('yellow'),color.color('blue'),os_name,color.color('yellow'),color.color('red'),job,color.color('yellow'),color.color('cyan'),encode_type,color.color('yellow'),color.color('green'),length,color.color('yellow'),color.color('purple'),filename,color.color('reset')))
		if NE is True:
			print (color.color('red')+'Note: %s%s%s encode type module is not activated yet, so your shellcode generated with %snone%s encode type! Please Wait for update. To see available modules take a look at the %sfeatures_table.html%s file in software folder.'%(color.color('green'),old_encode_type,color.color('red'),color.color('cyan'),color.color('red'),color.color('white'),color.color('red')))
def disable(os_name,job):
	print (color.color('red')+'Note: %s%s%s function is not Activated for %s%s%s OS Yet, Please wait for update.\nTo see available modules take a look at the %sfeatures_table.html%s file in software folder.'%(color.color('cyan'),job,color.color('red'),color.color('blue'),os_name,color.color('red'),color.color('white'),color.color('red')))
	return 0	
